{"version":3,"sources":["assets/images/digitlogo.png","components/Navbar/Navbar.tsx","components/Home/Home.tsx","api/server.ts","redux/slices/RootSlice.ts","components/SharedComponents/Input.tsx","components/ContactForm/ContactForm.tsx","components/DataTable/DataTable.tsx","custom-hooks/FetchData.ts","components/Phonebook/Phonebook.tsx","components/Contact/Contact.tsx","components/About/About.tsx","components/SignIn/SignIn.tsx","redux/store.ts","index.tsx","firebaseConfig.ts"],"names":["useStyles","makeStyles","logo","content","Digits","maxWidth","height","navlogo","display","flexDirection","justifyContent","alignItems","center","column","row","navbar","backgroundColor","zIndex","borderBottom","navbarItem","color","textDecoration","p5","padding","spaceBetween","alignCenter","ul","listStyleType","width60","width","width100","psides","paddingRight","paddingLeft","UserFavorites","useSigninCheck","status","signInCheckResult","data","classes","signedIn","Button","to","className","Navbar","fallback","background","backgroundImage","backgroundPosition","position","main_text","textAlign","top","left","transform","button_text","Home","props","title","token","server_calls","get","a","fetch","method","headers","response","ok","Error","json","create","body","JSON","stringify","update","id","delete","rootSlice","createSlice","name","initialState","email","phone_number","address","reducers","chooseName","state","action","payload","chooseEmail","choosePhone","chooseAddress","reducer","actions","Input","forwardRef","ref","TextField","variant","margin","inputRef","fullWidth","type","ContactForm","dispatch","useDispatch","store","useStore","useSelector","useForm","register","handleSubmit","onSubmit","event","console","log","setTimeout","window","location","reload","target","reset","getState","htmlFor","placeholder","columns","field","headerName","hide","flex","DataTable","useState","contactData","setData","handleDataFetch","result","useEffect","getData","useGetData","open","setOpen","gridData","selectionModel","setSelectionModel","handleClose","style","rows","pageSize","checkboxSelection","onSelectionModelChange","item","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","drawerWidth","theme","createStyles","main","fontFamily","h3","text","logo_a","logo_navigation","listStyle","textTransform","root","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","flexGrow","contentShift","toolbar_button","margin_top","marginTop","font","leftMargin","Phonebook","withRouter","history","useTheme","dialogOpen","setDialogOpen","handleDialogClickOpen","handleDialogClickClose","itemsList","push","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","Typography","noWrap","anchor","paper","direction","Divider","List","map","index","ListItem","button","ListItemText","primary","Contact","About","Alert","elevation","googleButton","border","boxShadow","fontSize","lineHeight","borderRadius","cursor","googleLogo","typographyStyle","containerStyle","snackBar","SignIn","auth","useAuth","handleSnackClose","reason","sign_in","signInWithPopup","firebase","GoogleAuthProvider","user","sign_out","signOut","Container","Snackbar","message","autoHideDuration","severity","configureStore","devTools","ReactDOM","render","StrictMode","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","suspense","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.8e6d00df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/digitlogo.c7bd63e0.png\";","import React, { Suspense } from 'react'\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Digits from '../../assets/images/digitlogo.png';\nimport { useSigninCheck } from 'reactfire'\n\nconst useStyles = makeStyles({\n    logo: {\n        content: `url(${Digits})`,\n        maxWidth: '20%',\n        height: 'auto',\n    },\n    navlogo: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n    },\n    center: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    column: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    row: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    navbar: {\n        backgroundColor: '#003155',\n        zIndex: 1,\n        borderBottom: '1px solid grey',\n    },\n    navbarItem: {\n        color: 'white',\n        textDecoration: 'none',\n    },\n    p5: {\n        padding: '5px',\n    },\n    spaceBetween: {\n        justifyContent: 'space-between',\n    },\n    alignCenter: {\n        alignItems: 'center'\n    },\n    ul: {\n        listStyleType: 'none',\n    },\n    width60: {\n        width: '60%',\n    },\n    width100: {\n        width: '100%',\n    },\n    psides: {\n        paddingRight: '10px',\n        paddingLeft: '10px',\n    },\n})\n\nfunction UserFavorites() {\n    const { status, data: signInCheckResult } = useSigninCheck();\n    const classes = useStyles();\n\n    if (status === 'loading') {\n        return <span>loading...</span>;\n    }\n\n    if (signInCheckResult.signedIn === true) {\n        return (\n            <>\n                <li>\n                    <Button>\n                        <Link to='/Phonebook' className={`${classes.navbarItem} ${classes.psides}`}>My Phonebook</Link>\n                    </Button>\n                </li>\n                <li>\n                    <Button>\n                        <Link to='Contact' className={`${classes.navbarItem} ${classes.psides}`}>Contact Us</Link>\n                    </Button>\n                </li>\n                <li>\n                    <Button>\n                        <Link to='About' className={`${classes.navbarItem} ${classes.psides}`}>About Us</Link>\n                    </Button>\n                </li>\n            </>\n        )\n    } else {\n        return (\n            <>\n                <li>\n                    <Link to=\"/signin\" className={`${classes.navbarItem} ${classes.psides}`}>Sign In</Link>\n                </li>\n\n                <li>\n                    <Button>\n                        <Link to='/Phonebook' className={`${classes.navbarItem} ${classes.psides}`}>My Phonebook</Link>\n                    </Button>\n                </li>\n                <li>\n                    <Button>\n                        <Link to='Contact' className={`${classes.navbarItem} ${classes.psides}`}>Contact Us</Link>\n                    </Button>\n                </li>\n                <li>\n                    <Button>\n                        <Link to='About' className={`${classes.navbarItem} ${classes.psides}`}>About Us</Link>\n                    </Button>\n                </li>\n            </>\n        )\n    }\n}\n\nexport const Navbar = () => {\n    const classes = useStyles();\n\n    return (\n\n        <div className={`${classes.row} ${classes.navbar} ${classes.width100} ${classes.alignCenter} ${classes.p5} ${classes.spaceBetween}`}>\n            <div className={`${classes.navlogo} `}>\n                <Link to='/' className={`${classes.logo} ${classes.p5}`}>\n                </Link>\n            </div>\n            <div className={`${classes.width60} ${classes.alignCenter}`}>\n                <ul className={`${classes.ul} ${classes.row} ${classes.spaceBetween} ${classes.psides}`}>\n                    <Suspense fallback={'loading...'}>\n                        <UserFavorites />\n                    </Suspense>\n                </ul>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { Navbar } from '../../components/Navbar'\nimport { Link } from 'react-router-dom';\n\n\ninterface Bananas {\n    title: string;\n}\n\nconst useStyles = makeStyles({\n    background: {\n        backgroundImage: `linear-gradient(rgba(0, 49, 85) 0%, rgba(121,147,163,1) 47%, rgba(249,249,249,1) 100%)`,\n        width: '100%',\n        height: '90%',\n        backgroundPosition: 'center',\n        position: 'absolute',\n        zIndex: -1,\n    },\n    main_text: {\n        textAlign: 'center',\n        position: 'relative',\n        top: '40%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        color: 'white',\n    },\n    button_text: {\n        color: 'white',\n        textDecoration: 'none',\n    },\n})\n\nexport const Home = ( props: Bananas ) => {\n    const classes = useStyles();\n    return (\n        <>\n            <Navbar />\n            <div className={`${classes.background}`}>\n            <div className={classes.main_text}>\n                <h1>{ props.title }</h1>\n                <Button>\n                    <Link to='/phonebook' className={classes.button_text}>Take me to my Phonebook</Link>\n                </Button>\n            </div>\n            </div>\n        </>\n    )\n}","let token = '53a64b723ef054ffc83878619439551df935a7113f388b2f'\n\nexport const server_calls = {\n    get: async () => {\n        const response = await fetch(`https://phonebook-flask.herokuapp.com/api/contacts`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            }\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to fetch data from server')\n        }\n\n        return await response.json()\n    },\n\n    create: async (data: any = {}) => {\n        const response = await fetch(`https://phonebook-flask.herokuapp.com/api/contacts`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            },\n            body: JSON.stringify(data)\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to Create new data on server')\n        }\n\n        return await response.json()\n    },\n    update: async (id: string, data: any = {}) => {\n        const response = await fetch(`https://phonebook-flask.herokuapp.com/api/contacts${id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            },\n            body: JSON.stringify(data)\n        });\n    },\n    delete: async (id: string) => {\n        const response = await fetch(`https://phonebook-flask.herokuapp.com/api/contacts${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            }\n        })\n    }\n}","import { createSlice } from '@reduxjs/toolkit';\n\nconst rootSlice = createSlice({\n    name: \"root\",\n    initialState: {\n        name: 'Name',\n        email: 'Email',\n        phone_number: 'Phone Number',\n        address: 'Address',\n    },\n    reducers: {\n        chooseName: (state, action) => { state.name = action.payload},\n        chooseEmail: (state, action) => { state.email = action.payload},\n        choosePhone: (state, action) => { state.phone_number = action.payload},\n        chooseAddress: (state, action) => { state.address = action.payload},\n    }\n})\n\n// Export Reducer\nexport const reducer = rootSlice.reducer;\nexport const { chooseName, chooseEmail, choosePhone, chooseAddress } = rootSlice.actions;\n\n// A reducer is like an event listener that handles the events based on the kind of event it receives","import React, { forwardRef } from 'react';\nimport { TextField } from '@material-ui/core';\n\ninterface inputType{\n    name: string;\n    placeholder: string;\n}\n\nexport const Input = forwardRef((props:inputType, ref) => {\n    return (\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        inputRef={ref}\n        fullWidth\n        type='text'\n        {...props}\n      ></TextField>\n    );\n  });","// Done\n\nimport React from 'react'\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { chooseName, chooseEmail, chooseAddress, choosePhone } from '../../redux/slices/RootSlice';\nimport { Input } from '../SharedComponents/Input';\nimport { Button } from '@material-ui/core';\n\nimport { server_calls } from '../../api';\n\n// import { useGetData } from '../../custom-hooks';\n\n// Where do we get this from?\ninterface ContactFormProps {\n    id?:string;\n    data?:{}\n}\n\ninterface ContactState {\n    name: string;\n    email: string;\n    address: string;\n    phone_number: string;\n}\n\nexport const ContactForm = (props:ContactFormProps) => {\n    // ask Joel about contactData and state\n    const dispatch = useDispatch();\n    // let { contactData, getData } = useGetData();\n    const store = useStore();\n    const name = useSelector<ContactState>(state => state.name);\n    const { register, handleSubmit } = useForm({ })\n\n    const onSubmit = (data:any, event:any) => {\n        console.log(props.id)\n        // The ! is for strictly typed Typescript stuff\n        if(props.id!){\n            server_calls.update(props.id!, data);\n            console.log(`Updated:${data} ${props.id}`);\n            console.log(data);\n            setTimeout( () => {window.location.reload()}, 1000);\n            event.target.reset();\n        } else {\n            // Dispatch basically updates our state / Redux store\n            dispatch(chooseName(data.name));\n            dispatch(chooseEmail(data.email));\n            dispatch(choosePhone(data.phone_number));\n            dispatch(chooseAddress(data.address));\n            server_calls.create(store.getState());\n            setTimeout( () => {window.location.reload()}, 1000)\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit = {handleSubmit(onSubmit)}>\n                <div>\n                    <label htmlFor=\"name\">Contact Name</label>\n                    <Input {...register('name')} name=\"name\" placeholder='Name'/>\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <Input {...register('email')} name=\"email\" placeholder='Email'/>\n                </div>\n                <div>\n                    <label htmlFor=\"phone_number\">Phone Number</label>\n                    <Input {...register('phone_number')} name=\"phone_number\" placeholder='Phone Number'/>\n                </div>\n                <div>\n                    <label htmlFor=\"address\">Address</label>\n                    <Input {...register('address')} name=\"address\" placeholder='Address'/>\n                </div>\n                <Button type='submit'>Submit</Button>\n            </form>\n        </div>\n    )\n}\n","// Need to figure out params and selection issues\n\nimport React, { useState } from 'react';\nimport { DataGrid, GridColDef } from '@material-ui/data-grid';\nimport { useGetData } from '../../custom-hooks';\nimport { server_calls } from '../../api';\nimport { Button, Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle } from '@material-ui/core';\nimport { ContactForm } from '../ContactForm';\n\n\n\n\nconst columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 90, hide: true },\n    { field: 'name', headerName: 'Contact Name', flex: 1 },\n    { field: 'email', headerName: 'Email', flex: 1 },\n    { field: 'phone_number', headerName: 'Phone Number', flex: 1 },\n    { field: 'address', headerName: 'Address', flex: 2 },\n];\n\ninterface gridData {\n    data: {\n        id?:string\n    }\n}\n\nexport const DataTable = () => {\n\n    let { contactData, getData } = useGetData();\n    let [open, setOpen] = useState(false);\n    let [gridData, setData] = useState<gridData>({data:{}});\n    const [selectionModel, setSelectionModel] = useState<any>([]);\n    \n\n    let handleOpen = () => {\n        setOpen(true)\n    };\n    let handleClose = () => {\n        setOpen(false)\n    };\n\n    let deleteData = () => {\n        server_calls.delete(selectionModel);\n        // console.log(gridData.data.id);\n        getData();\n        setTimeout( () => { window.location.reload(); }, 1000)\n    }\n\n    console.log(gridData.data.id!);\n    console.log(`testing for data ${contactData}`)\n\n\n    return (\n        <div style={{ height: 400, width: '100%' }}>\n            <h2>My Contacts</h2>\n\n        <DataGrid rows={ contactData } columns={ columns } pageSize={ 5 } checkboxSelection={true} \n        onSelectionModelChange={ (item) => {\n            setSelectionModel(item)\n          }}\n        />\n\n        <Button onClick={handleOpen}>Update</Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={deleteData}>Delete</Button>\n\n        {/* Dialog pop-up */}\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Update Contact {selectionModel}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>Update Contact</DialogContentText>\n                    <ContactForm id={selectionModel!}/>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">Cancel</Button>\n                <Button onClick={handleClose} color=\"primary\">Done</Button>\n            </DialogActions>\n        </Dialog>\n            \n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { server_calls } from '../api'\n\nexport const useGetData = () => {\n    const [contactData, setData] = useState<[]>([]);\n\n    async function handleDataFetch(){\n        const result = await server_calls.get();\n        setData(result)\n    }\n\n    useEffect( () => {\n        handleDataFetch();\n    }, [])\n\n        return {contactData, getData:handleDataFetch}\n}","// Update styling here\n\nimport React, {useState}  from 'react'\n// import { Link } from 'react-router-dom';\n// import {Paper} from '@material-ui/core';\nimport { Drawer as MUIDrawer, \n    ListItem, \n    List, \n    // ListItemIcon, \n    ListItemText, \n    Theme,\n    useTheme, \n    makeStyles, \n    createStyles,\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    Divider,\n    Button,\n    Dialog, \n    DialogActions, \n    DialogContent,\n    DialogContentText, \n    DialogTitle  ,\n} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport clsx from 'clsx'; // This allows us to conditionally apply classes\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { DataTable } from '../../components/DataTable';\nimport { ContactForm } from '../ContactForm'\n\n\ninterface PhonebookProps{\n    history: RouteComponentProps[\"history\"];\n    location: RouteComponentProps['location'];\n    match: RouteComponentProps['match'];\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    main: {\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))`,\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\n    },\n    h3: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: 'black',\n    },\n    text: {\n        display: 'flex',\n        flexDirection: 'column',\n        color: '#4ef3b4',\n        textDecoration: 'none',\n        backgroundColor: 'white',\n        width: '60%',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    logo:{\n        margin: '0 0 0 0.45em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    logo_a: {\n        color: '#4ef3b4',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    logo_navigation: {\n        listStyle: 'none',\n        textTransform: 'uppercase',\n        textDecoration: 'none',\n    },\n    root: {\n      display: 'flex',\n    },\n    column: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    // begin comment\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    // end comment\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    // begin comment\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    // end comment\n    toolbar:{\n      display: 'flex',\n      backgroundColor: '#003155',\n      color: 'white',\n      fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\n    },\n    toolbar_button: {\n      marginLeft: 'auto',\n      color: 'white',\n      fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\n    },\n    margin_top: {\n        marginTop: '50px',\n    },\n    font: {\n        fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\n    },\n    leftMargin: {\n        marginLeft: '0px',\n    },\n}))\n\n\nexport const Phonebook = withRouter(( props:PhonebookProps ) => {\n    console.log(props);\n    const { history } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false)\n    };\n\n    const handleDialogClickOpen = () => {\n        setDialogOpen(true)\n    };\n\n    const handleDialogClickClose = () => {\n        setDialogOpen(false)\n    };\n\n    const itemsList = [\n        {\n            text: 'Home',\n            onClick: () => history.push('/')\n        },\n        {\n            text: 'Sign In',\n            onClick: () => history.push('/signin')\n        },\n        {\n            text: 'About',\n            onClick: () => history.push('/about')\n        },\n        {\n            text: 'Contact',\n            onClick: () => history.push('/contact')\n        },\n    ]\n\n    \n\n    return (\n        <div className={`${classes.root} ${classes.column}`}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={clsx(classes.appBar, {[classes.appBarShift]: open })}>\n                <Toolbar className={classes.toolbar}>\n                    <IconButton color=\"inherit\" aria-label=\"open-drawer\" onClick={handleDrawerOpen} edge=\"start\" className={clsx(classes.menuButton, open && classes.hide)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.font} noWrap>\n                        My Phonebook\n                    </Typography>\n                    <Button className={classes.toolbar_button} onClick={handleDialogClickOpen}>Create New Contact</Button>\n\n                    {/* Dialog Pop Up */}\n                    <Dialog open={dialogOpen} onClose={handleDialogClickClose} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">Add New Contact</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText></DialogContentText>\n                            <ContactForm />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleDialogClickClose} color=\"primary\">Cancel</Button>\n                            <Button onClick={handleDialogClickOpen} color=\"primary\">Done</Button>\n                        </DialogActions>\n                    </Dialog>\n                    {/* End dialog pop-up */}\n                </Toolbar>\n            </AppBar>\n            <MUIDrawer className={classes.drawer} variant=\"persistent\" anchor=\"left\" open={open} classes={{paper: classes.drawerPaper,}}>\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {itemsList.map((item, index) => {\n                        const { text, onClick } = item;\n                        return (\n                            <ListItem button key={text} onClick={onClick}>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </MUIDrawer>\n            <main className={`${clsx(classes.content, {[classes.contentShift]: open,})} ${classes.leftMargin}`}>\n                <div className={classes.drawerHeader} />\n                    <DataTable />\n            </main>\n        </div>\n    )\n});\n","import React from 'react'\nimport { Navbar } from '../Navbar'\n\nexport const Contact = () => {\n    return (\n        <div>\n            <Navbar />\n            Howdy call me boi\n        </div>\n    )\n}\n","import React from 'react'\nimport { Navbar } from '../Navbar'\n\nexport const About = () => {\n    return (\n        <div>\n            <Navbar />\n            yowdy\n        </div>\n    )\n}\n","import React, { useState, Suspense } from 'react'\nimport firebase from 'firebase/app';\nimport { useAuth, useSigninCheck } from 'reactfire';\nimport 'firebase/auth';\nimport { Input } from '../SharedComponents/Input';\nimport { Container, Button, makeStyles, Typography, Snackbar, } from '@material-ui/core';\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { Navbar } from '..'\n\nconst Alert = (props: AlertProps) => {\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\n\nconst useStyles = makeStyles({\n    googleButton: {\n        backgroundColor: 'rgb(66,133,244)',\n        marginTop: '2em',\n        padding: '0',\n        color: 'white',\n        height: '50px',\n        width: '240px',\n        border: 'none',\n        textAlign: 'center',\n        boxShadow: 'rgb(0 0 0 / 25%) 0px 2px 4px 0px',\n        fontSize: '16px',\n        lineHeight: '48px',\n        display: 'block',\n        borderRadius: '1px',\n        fontFamily: 'Roboto, arial, sans-serif',\n        cursor: 'pointer'\n    },\n    googleLogo: {\n        width: '48px',\n        height: '48px',\n        display: 'block'\n    },\n    typographyStyle: {\n        fontFamily: 'Roboto, arial, sans-serif;',\n        textAlign: 'center',\n        fontSize: '2em'\n    },\n    containerStyle: {\n        marginTop: '2em'\n    },\n    snackBar: {\n        color: 'white',\n        backgroundColor: '#4caf50'\n    }\n\n});\n\ninterface SignInProps {\n    history: RouteComponentProps[\"history\"];\n    location: RouteComponentProps['location'];\n    match: RouteComponentProps['match'];\n}\n\nexport const SignIn = withRouter((props: SignInProps) => {\n\n    const auth = useAuth();\n    const classes = useStyles();\n    const { history } = props;\n    const [open, setOpen] = useState(false);\n\n    const handleSnackOpen = () => {\n        setOpen(true)\n    };\n\n    const handleSnackClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n        history.push('/')\n    }\n\n    const sign_in = async () => {\n        const response = await auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n        if (response.user) {\n            handleSnackOpen();\n        }\n    };\n\n    const sign_out = async () => {\n        await auth.signOut();\n    }\n\n    function UserFavorites() {\n        const { status, data: signInCheckResult } = useSigninCheck();\n\n        if (status === 'loading') {\n            return <span>loading...</span>;\n        }\n\n        if (signInCheckResult.signedIn === true) {\n            return <Button variant='contained' className={classes.googleButton} onClick={sign_out}>Sign Out</Button>\n        } else {\n            return <Button className={classes.googleButton} onClick={sign_in}>Sign In With Google</Button>\n        }\n    }\n\n    return (\n        <div>\n            <Navbar />\n            <Container maxWidth='sm' className={classes.containerStyle}>\n                <Typography className={classes.typographyStyle}>Sign In Below</Typography>\n                <form>\n                    <div>\n                        <label htmlFor=\"email\">Email</label>\n                        <Input name=\"email\" placeholder=\"Place Email Here\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\">Password</label>\n                        <Input name=\"password\" placeholder=\"Place Password Here\" />\n                    </div>\n                    <Button type=\"submit\" variant='contained' color='primary'>Submit</Button>\n                </form>\n                <Suspense fallback={'loading...'}>\n                    <UserFavorites />\n                </Suspense>\n\n                <Snackbar message={'Success'} open={open} autoHideDuration={6000} onClose={handleSnackClose}>\n                    <Alert onClose={handleSnackClose} severity=\"success\">\n                        Successful Sign In - Redirect in 6 seconds\n                    </Alert>\n                </Snackbar>\n            </Container>\n        </div>\n    )\n});","import { configureStore} from '@reduxjs/toolkit';\nimport { reducer } from './slices/RootSlice';\n\nexport const store = configureStore({\n    reducer,\n    devTools: true\n})\n\n// Redux Store exists as it's own kind of state that we can call and update from multiple components","import React from 'react';\nimport {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Home, Phonebook, Contact, About, SignIn } from './components'\nimport './styles.css'\n\nimport { FirebaseAppProvider } from 'reactfire';\nimport { firebaseConfig } from './firebaseConfig'\nimport 'firebase/auth';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'\nconst temp_props = \"a beautiful Phonebook\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseAppProvider firebaseConfig={firebaseConfig} suspense={true}>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home title={temp_props} />\n            </Route>\n            <Route path='/phonebook'>\n              <Phonebook></Phonebook>\n            </Route>\n            <Route path='/contact'>\n              <Contact></Contact>\n            </Route>\n            <Route path='/about'>\n              <About></About>\n            </Route>\n            <Route path='/signin'>\n              <Suspense fallback={'loading...'}>\n                <SignIn />\n              </Suspense>\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </FirebaseAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","export const firebaseConfig = {\n    apiKey: \"AIzaSyDHFGH1cAV3FyXmuiOrrwe6TuNxsy9WkqE\",\n    authDomain: \"react-phonebook-7db09.firebaseapp.com\",\n    projectId: \"react-phonebook-7db09\",\n    storageBucket: \"react-phonebook-7db09.appspot.com\",\n    messagingSenderId: \"502365925441\",\n    appId: \"1:502365925441:web:072d86be2012edbc3956c0\"\n};"],"sourceRoot":""}